#!/usr/bin/env zsh
set -e

# -----------------------------
# Flutter Wrapper
# -----------------------------
# GitHub: https://github.com/badrat-in/flutter-wrapper
# -----------------------------

FLUTTER_BIN="/Applications/flutter/bin/flutter"
FLUTTERFLOW_BIN="$HOME/Library/Application Support/io.flutterflow.prod.mac/flutter/bin/flutter"

# Default engine (can be overridden via env)
if [[ -f ~/.flutter_wrapper_engine ]]; then
    ENGINE=$(cat ~/.flutter_wrapper_engine)
else
    ENGINE="flutter"  # default
fi

# Decide which real Flutter binary based on engine
REAL_FLUTTER=$([[ "$ENGINE" == "flutterflow" ]] && echo "$FLUTTERFLOW_BIN" || echo "$FLUTTER_BIN")

# -----------------------------
# Helper Commands
# -----------------------------
case "$1" in
  help|--help|-h)
    case "$2" in
      use)
        echo "Usage: flutter use [flutter|flutterflow]"
        echo ""
        echo "Switches the Flutter engine for the current terminal session."
        echo ""
        echo "Arguments:"
        echo "  flutter       Use the system-installed Flutter SDK."
        echo "  flutterflow   Use the FlutterFlow-specific Flutter SDK."
        ;;
      icons)
        echo "Usage: flutter icons [input_image.png]"
        echo ""
        echo "Generates app icons for iOS and Android from a source image."
        echo ""
        echo "Arguments:"
        echo "  [input_image.png]   Optional. Path to the source image."
        echo "                      Defaults to './assets/images/app_launcher_icon.png'."
        ;;
      resize)
        echo "Usage: flutter resize [--path DIR] [--device iphone|ipad]"
        echo ""
        echo "Resizes screenshots for the App Store and Play Store."
        echo ""
        echo "Options:"
        echo "  --path DIR     Path to the directory containing the screenshots."
        echo "                 Defaults to '~/Desktop/Screenshots'."
        echo "  --device TYPE  Device type for resizing presets: 'iphone' or 'ipad'."
        echo "                 Defaults to 'iphone'."
        ;;
      *)
        echo "Flutter Wrapper Commands:"
        echo "  use flutter|flutterflow   - Switch Flutter version for the session"
        echo "  icons [input_image.png]   - Generate app icons"
        echo "  resize --path ...         - Resize screenshots"
        echo ""
        "$REAL_FLUTTER" "$@" # Pass the original help command
        ;;
    esac
    exit 0
    ;;
  use)
    echo "$2" > ~/.flutter_wrapper_engine
    echo "Using Flutter version: $2"
    exit 0
    ;;
  icons)
    shift
    zsh "$(dirname $0)/../scripts/generate-icons.zsh" "$@"
    exit 0
    ;;
  resize)
    shift
    zsh "$(dirname $0)/../scripts/resize-screenshots.zsh" "$@"
    exit 0
    ;;
  build)
    # If no subcommand is provided (e.g., "flutter build"), pass through.
    if [[ -z "$2" ]]; then
      "$REAL_FLUTTER" "$@"
      exit $?
    fi

    # Auto-versioning
    PUBSPEC="pubspec.yaml"
    PLATFORM=$2
    shift 2

    if [[ -f $PUBSPEC ]]; then
      # Extract version using regex
      VERSION_NAME=$(grep -Eo 'version:\s*([0-9]+\.[0-9]+\.[0-9]+)' "$PUBSPEC" | head -n1 | awk '{print $2}')
    else
      VERSION_NAME="0.0.1"
    fi

    BUILD_NUMBER=$(git rev-list --count HEAD)

    if [[ -f $PUBSPEC ]]; then
      sed -i '' "s/^version:.*/version: ${VERSION_NAME}+${BUILD_NUMBER}/" "$PUBSPEC"
      echo "[INFO] Updated pubspec.yaml â†’ ${VERSION_NAME}+${BUILD_NUMBER}"
    fi

    echo "[INFO] Building Flutter app for $PLATFORM"
    "$REAL_FLUTTER" build "$PLATFORM" "$@"
    ;;
  *)
    # All other flutter commands
    echo "[INFO] Running: flutter $@"
    "$REAL_FLUTTER" "$@"
    ;;
esac

# Return the exit code of the last command executed
EXIT_CODE=$?
return $EXIT_CODE
